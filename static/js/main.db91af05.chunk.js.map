{"version":3,"sources":["api.js","sidebar/SidebarChat.js","sidebar/SideBar.js","sidebar/SkinnySidebar.js","chat/ChatHeader.js","chat/Emoji.js","chat/Message.js","chat/ChatThread.js","chat/Participant.js","chat/ChatParticipants.js","chat/Chat.js","map/MapContainer.js","Home.js","login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["api","axios","create","baseURL","SidebarChat","props","useState","lastMessage","setLastMessage","useEffect","room","length","substring","roomName","name","className","onClick","handleClick","toggleChatStatus","toggleChat","Avatar","SideBar","search","setSearch","chatRooms","setChatRooms","forEach","src","user","IconButton","history","push","toggleSidebar","placeholder","type","onChange","e","str","target","value","console","log","index","arr","obj","toLowerCase","map","chatToggleStatus","SkinnySidebar","ChatHeader","date","seconds","Math","floor","Date","interval","timeSince","roomData","lastTimestamp","AttachFile","handleToggleThread","Emoji","onEmojiClick","event","emojiObject","getEmoji","handleToggle","Message","message","timestamp","ChatThread","see","messages","toggleEmoji","setToggleEmoji","input","setInput","latitude","setLatitude","longitude","setLongitude","locationOff","setLocationOff","getLocation","data","coords","askLocation","warn","get","then","res","lat","lon","catch","scrollToBottom","document","getElementById","focus","navigator","geolocation","getCurrentPosition","animateScroll","containerId","handleToggleEmoji","id","preventDefault","post","now","err","emoji","Participant","participant","ChatParticipants","participants","setParticipants","Chat","toggleThread","setToggleThread","setRoomData","GoogleApiWrapper","apiKey","loaded","setLoaded","bound","setBound","bounds","google","maps","LatLngBounds","i","points","extend","wordWrap","maxWidth","newLineStr","found","testWhite","charAt","slice","join","x","RegExp","test","mapStyles","position","width","height","zoom","style","initialCenter","lng","Object","values","sortedCoOrds","title","msg","split","icon","url","undefined","Home","setMessages","rooms","setRooms","setToggleChat","setToggleSidebar","match","params","setRoomName","setPoints","channel","Pusher","cluster","subscribe","bind","newMessage","unbind_all","unsubscribe","handleToggleSidebar","Login","setUsers","toggleDrop","setToggleDrop","href","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.db91af05.chunk.js","sourcesContent":["import axios from 'axios';\n\n\n  // const url = 'http://localhost:9000';\n\n  // const url = 'https://swaff-y.github.io/';\n\n\nconst api = axios.create({\n  baseURL: 'https://swaff-y.github.io/mapChat-react',\n})\n\nexport default api;\n","import React, {useEffect,useState} from 'react';\nimport {Avatar} from '@material-ui/core';\nimport \"./SidebarChat.css\"\n\nconst SidebarChat = (props) => {\n  const [lastMessage, setLastMessage] = useState(\"\")\n\n  useEffect(()=>{\n      if(props.room.lastMessage.length <= 15){\n        setLastMessage(props.room.lastMessage);\n      }else{\n        setLastMessage(props.room.lastMessage.substring(0,20) + \" ...\");\n      }\n  },[props.room.lastMessage])\n\n  useEffect(()=>{\n    if(props.roomName === props.room.name && props.lastMessage !== \"\"){\n      if(props.lastMessage.length <= 15){\n        setLastMessage(props.lastMessage);\n      }else{\n        setLastMessage(props.lastMessage.substring(0,20) + \"...\");\n      }\n    }\n  },[props.lastMessage])\n\n  const handleClick = () => {\n    props.handleClick(props.room.name);\n    if(props.toggleChatStatus !== true){\n      props.toggleChat();\n    }\n  }\n\n  return(\n    <div className=\"sidebarChat\" onClick={handleClick}>\n      <Avatar />\n      <div className=\"sidebarChat_info\">\n        <h2>{ props.room.name }</h2>\n        <p>{ lastMessage }\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default SidebarChat;\n","import React, {useState} from 'react';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchOutlined from '@material-ui/icons/SearchOutlined';\nimport {Avatar, IconButton} from '@material-ui/core';\nimport SidebarChat from './SidebarChat';\nimport \"./SideBar.css\"\n\nconst SideBar = (props) => {\n  const [search, setSearch] = useState(\"\");\n  const [chatRooms, setChatRooms] = useState(null);\n  // const [arr, setArr] = useState([]);\n\n  props.chatRooms.forEach((room)=>{\n    // console.log(room.name);\n  })\n\n  // console.log(props.chatRooms.name);\n\n  const handleChange = (e) => {\n     // console.log(\"Chat Rooms\",chatRooms);\n    let str = e.target.value;\n    console.log(str);\n    setSearch(str);\n    const index = e.target.value.length - 1;\n    console.log(str,index,chatRooms);\n\n    let arr = [];\n\n    // console.log(\"comp:\", index);\n     if(chatRooms === null){\n      props.chatRooms.forEach((room)=>{\n        console.log(\"room index:\", index);\n        let obj = {};\n        if(index >= 0){\n          console.log(\"here\");\n          if(str.toLowerCase() === room.name[index].toLowerCase()){\n            obj['name'] = room.name;\n            obj['lastMessage'] = room.lastMessage;\n            // console.log(props.chatRooms);\n\n            // setArr(arr.push(obj));\n\n            arr.push(obj);\n          }\n        }\n      })\n     }\n    else{\n      chatRooms.forEach((room)=>{\n        // console.log(\"room index:\", index);\n        let obj = {};\n        if(index >= 0 && index < 1){\n          if(str.toLowerCase() === room.name[index].toLowerCase()){\n            obj['name'] = room.name;\n            obj['lastMessage'] = room.lastMessage;\n            // console.log(props.chatRooms);\n\n            // setArr(arr.push(obj));\n\n            arr.push(obj);\n          }\n        }else if(index === 1){\n          // console.log(\"I ran\", str, room.name[index]);\n          if(str[index].toLowerCase() === room.name[index].toLowerCase()){\n            obj['name'] = room.name;\n            obj['lastMessage'] = room.lastMessage;\n            // console.log(props.chatRooms);\n\n            // setArr(arr.push(obj));\n\n            arr.push(obj);\n          }\n        }else if(index === 2){\n          // console.log(\"I ran\", str, room.name[index]);\n          if(str[index].toLowerCase() === room.name[index].toLowerCase()){\n            obj['name'] = room.name;\n            obj['lastMessage'] = room.lastMessage;\n            // console.log(props.chatRooms);\n\n            // setArr(arr.push(obj));\n\n            arr.push(obj);\n          }\n        }\n      })\n    }\n\n\n\n    if(index < 0){\n      setChatRooms(props.chatRooms);\n    }else{\n      setChatRooms(arr);\n    }\n\n  }\n  const handleClick = () => {\n    console.log(\"This is the text: \", search);\n  }\n\n   // console.log(chatRooms.);\n  return(\n    <div className=\"sidebar\">\n      <div className=\"sidebar_header\">\n        <Avatar src=\"https://avatars.githubusercontent.com/u/72368535?s=400&u=20eeecfe9dd1f5a481917319985b2de6d695a80c&v=4\"/>\n        <p><strong>Welcome:</strong> <br/>{props.user}</p>\n        <div className=\"sidebar_headerRight\">\n          <IconButton>\n            <DonutLargeIcon onClick={()=>props.history.push('/')}/>\n          </IconButton>\n          <IconButton>\n            <ChatIcon onClick={()=>props.toggleChat()}/>\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon onClick={()=>props.toggleSidebar()}/>\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"sidebar_search\">\n        <div className=\"sidebar_searchContainer\">\n          <SearchOutlined />\n          <form>\n            <input placeholder=\"Search\" type=\"text\" onChange={handleChange} />\n            <input type=\"submit\" className=\"hide\" onClick={handleClick} />\n          </form>\n        </div>\n      </div>\n      <div className=\"sidebar_chats\">\n        {\n          chatRooms !== null\n          ?\n          chatRooms.map((room,index) => <SidebarChat key={index} roomName={props.roomName} room={room} lastMessage={props.lastMessage} handleClick={props.handleClick} toggleChat={props.toggleChat} toggleChatStatus={props.chatToggleStatus}/>)\n          :\n          props.chatRooms.map((room,index) => <SidebarChat key={index} roomName={props.roomName} room={room} lastMessage={props.lastMessage} handleClick={props.handleClick} toggleChat={props.toggleChat} toggleChatStatus={props.chatToggleStatus}/>)\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default SideBar;\n","import React from 'react';\nimport {IconButton} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst SkinnySidebar = (props) => {\n  return(\n    <div className=\"skinnySidebar\">\n      <div className=\"skinnySidebar_headerRight\">\n        <IconButton>\n          <MoreVertIcon onClick={()=>props.toggleSidebar()}/>\n        </IconButton>\n      </div>\n    </div>\n  )\n}\n\nexport default SkinnySidebar;\n","import React, {useEffect, useState} from 'react';\nimport {Avatar, IconButton} from '@material-ui/core';\nimport {AttachFile, MoreVert, SearchOutlined } from '@material-ui/icons';\n\nconst ChatHeader = (props) => {\n  const timeSince = (date) => {\n\n    let seconds = Math.floor((new Date() - date) / 1000);\n\n    let interval = seconds / 31536000;\n\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" year ago..\";\n      }\n      return Math.floor(interval) + \" years ago..\";\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" month ago..\";\n      }\n      return Math.floor(interval) + \" months ago..\";\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" day ago..\";\n      }\n      return Math.floor(interval) + \" days ago..\";\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" hour ago..\";\n      }\n      return Math.floor(interval) + \" hours ago..\";\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" minute ago..\";\n      }\n      return Math.floor(interval) + \" minutes ago..\";\n    }\n    return \" just now..\";\n  }\n\n  return(\n    <div className=\"chat_header\">\n      <Avatar />\n\n      <div className=\"chat_headerInfo\">\n        <h3>{props.roomName}</h3>\n        <p>Last post was {timeSince(props.roomData.lastTimestamp)}</p>\n      </div>\n\n      <div className=\"chat_headerRight\">\n        <IconButton>\n          <SearchOutlined />\n        </IconButton>\n        <IconButton>\n          <AttachFile />\n        </IconButton>\n        <IconButton>\n          <MoreVert onClick={()=>props.handleToggleThread()}/>\n        </IconButton>\n      </div>\n    </div>\n  )\n}\n\nexport default ChatHeader;\n","import React, {useEffect, useState} from 'react';\nimport Picker from 'emoji-picker-react';\n\nconst Emoji = (props) => {\n\n  const onEmojiClick = (event, emojiObject) => {\n    props.getEmoji(emojiObject);\n    props.handleToggle();\n  };\n\n  return(\n    <div>\n       <Picker onEmojiClick={onEmojiClick} />\n    </div>\n  )\n}\n\nexport default Emoji;\n\n// {chosenEmoji ? (\n//   <span>You chose: {chosenEmoji.emoji}</span>\n// ) : (\n//   <span>No emoji Chosen</span>\n// )}\n","import React from 'react';\n\nconst Message = (props) => {\n\nconst timeSince = (date) => {\n\n  let seconds = Math.floor((new Date() - date) / 1000);\n\n  let interval = seconds / 31536000;\n\n  if (interval > 1) {\n    if(Math.floor(interval) === 1){\n      return Math.floor(interval) + \" year ago..\";\n    }\n    return Math.floor(interval) + \" years ago..\";\n  }\n  interval = seconds / 2592000;\n  if (interval > 1) {\n    if(Math.floor(interval) === 1){\n      return Math.floor(interval) + \" month ago..\";\n    }\n    return Math.floor(interval) + \" months ago..\";\n  }\n  interval = seconds / 86400;\n  if (interval > 1) {\n    if(Math.floor(interval) === 1){\n      return Math.floor(interval) + \" day ago..\";\n    }\n    return Math.floor(interval) + \" days ago..\";\n  }\n  interval = seconds / 3600;\n  if (interval > 1) {\n    if(Math.floor(interval) === 1){\n      return Math.floor(interval) + \" hour ago..\";\n    }\n    return Math.floor(interval) + \" hours ago..\";\n  }\n  interval = seconds / 60;\n  if (interval > 1) {\n    if(Math.floor(interval) === 1){\n      return Math.floor(interval) + \" minute ago..\";\n    }\n    return Math.floor(interval) + \" minutes ago..\";\n  }\n  return \" just now..\";\n}\n\n  return(\n    <>\n      <p className={`chat_message ${props.user === props.message.name ? \"chat_reciever\" : \"\"}`}>\n        <span className=\"chat_name\">{props.message.name}</span>\n          {props.message.message}\n        <span className=\"chat_timestamp\">\n          {timeSince(props.message.timestamp)}\n        </span>\n      </p>\n    </>\n  )\n}\n\nexport default Message;\n","import React, {useEffect, useState} from 'react';\nimport Emoji from './Emoji';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon'\nimport { animateScroll } from \"react-scroll\";\nimport MicIcon from '@material-ui/icons/Mic'\nimport Message from './Message'\nimport axios from 'axios';\nimport api from '../api'\n\nconst ChatThread = (props) => {\n\n  const see = props.messages;\n\n  const [toggleEmoji, setToggleEmoji] = useState(false);\n  const [input, setInput] = useState('');\n  const [latitude, setLatitude] = useState(props.latitude);\n  const [longitude, setLongitude] = useState(props.longitude);\n  const [locationOff, setLocationOff] = useState(false);\n\n  // console.log(\"The browser:\", navigator.permissions);\n\n  useEffect(()=>{\n    scrollToBottom();\n  },[props.messages])\n\n  useEffect(()=>{\n    document.getElementById(\"test\").focus();\n    navigator.geolocation.getCurrentPosition(getLocation,askLocation);\n\n  },[input])\n\n  function getLocation(data){\n    setLatitude(data.coords.latitude)\n    setLongitude(data.coords.longitude)\n    setLocationOff(false)\n  }\n  function askLocation(data){\n    console.warn(\"Location not set\");\n    axios.get(\"https://extreme-ip-lookup.com/json/\")\n    .then((res)=>{\n      setLatitude(res.data.lat)\n      setLongitude(res.data.lon)\n    })\n    .catch()\n\n    setLocationOff(true);\n  }\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    api.post(`/messages/new`, {\n      message: input,\n      name: props.user,\n      timestamp: Date.now(),\n      room: props.roomName,\n      latitude: latitude,\n      longitude: longitude\n    }).then((res=>{\n      console.log(\"Message Succesfully sent\");\n      setInput(\"\");\n    })).catch(err=>console.log(\"I am throwing and error:\", err));\n  };\n\n  const scrollToBottom = () => {\n    animateScroll.scrollToBottom({\n      containerId: \"scroll\"\n    });\n  };\n\n  const handleToggleEmoji = () => {\n    if(toggleEmoji === false){\n      setToggleEmoji(true);\n    }else if(toggleEmoji === true){\n      setToggleEmoji(false);\n    }\n  }\n\n  const setEmoji = (value) => {\n    setInput(input + value.emoji)\n  }\n\n  return(\n    <>\n      <div className=\"chat_body\" id=\"scroll\">\n        {\n          props.messages.map((message,index) => see[index].room === props.roomName ? <Message key={index} message={message} user={props.user} /> : null)\n        }\n      </div>\n\n      {\n        locationOff === true ? <div className=\"\"><strong>Please turn on your location settings</strong> <br/>(We are busy using an estimated location based on you IP Address)</div> : null\n      }\n\n      <div className=\"chat_footer\">\n        <InsertEmoticonIcon onClick={handleToggleEmoji} />\n        <form>\n          <input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Type a message\"\n            type=\"text\"\n            id=\"test\"\n          />\n          <button onClick={sendMessage}>Send a message</button>\n        </form>\n        <MicIcon />\n      </div>\n\n      {\n        toggleEmoji === true ? <Emoji getEmoji={setEmoji} handleToggle={handleToggleEmoji}/> : null\n      }\n    </>\n  )\n}\n\nexport default ChatThread;\n","import React, {useEffect, useState} from 'react';\nimport {Avatar} from '@material-ui/core';\n\nconst Participant = ({participant}) => {\n  const [lastMessage, setLastMessage] = useState(\"\");\n\n  useEffect(()=>{\n    if(participant.lastMessage.length <= 15){\n      setLastMessage(participant.lastMessage);\n    }else{\n      setLastMessage(participant.lastMessage.substring(0,20) + \" ...\");\n    }\n  },[participant.lastMessage])\n\n  return(\n    <div className=\"sidebarChat\">\n      <Avatar />\n      <div className=\"sidebarChat_info\">\n        <h2>{ participant.name }</h2>\n        <p>{ lastMessage }</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Participant;\n","import React, {useEffect, useState} from 'react';\nimport Participant from './Participant'\nimport api from '../api';\n\nconst ChatParticipants = (props) => {\n\n  const [participants, setParticipants] = useState([]);\n\n  useEffect(()=>{\n    api.get(`room/${props.roomName}`)\n    .then(res=>{\n      setParticipants(res.data.participants)\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n  },[props.roomName])\n\n  return(\n    <div className=\"chat_participants\">\n      {\n        participants.map((participant,index) => <Participant key={index} participant={participant}/> )\n      }\n    </div>\n  )\n}\n\nexport default ChatParticipants;\n","import React, { useState, useEffect } from 'react';\nimport ChatHeader from './ChatHeader'\nimport ChatThread from './ChatThread'\nimport ChatParticipants from './ChatParticipants'\nimport \"./Chat.css\"\nimport api from '../api';\n\n\nconst Chat = (props) => {\n  const [toggleThread, setToggleThread] = useState(true);\n  const [roomData, setRoomData] = useState([]);\n\n\n  useEffect(()=>{\n    api.get(`room/${props.roomName}`)\n    .then(res=>{\n      setRoomData(res.data)\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n  },[props.messages])\n\n  const handleToggleThread = () => {\n    if(toggleThread === false){\n      setToggleThread(true);\n    }else if(toggleThread === true){\n      setToggleThread(false);\n    }\n  }\n\n  return(\n    <>\n\n      <ChatHeader handleToggleThread={handleToggleThread} roomName={props.roomName} roomData={roomData} latitude={props.latitude} longitude={props.longitude}/>\n\n      {\n        toggleThread === true ? <ChatThread messages={props.messages} roomName={props.roomName} user={props.user}/> : <ChatParticipants roomName={props.roomName} />\n      }\n\n    </>\n  ); // return\n}; //Function\n\nexport default Chat;\n","import React, {useEffect, useState} from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\nconst MapContainer = (props) => {\n\n  const [loaded, setLoaded] = useState(false);\n  const [bound, setBound] = useState();\n  const [obj, setObj] = useState({});\n\n  const bounds = new props.google.maps.LatLngBounds();\n  for (var i = 0; i < props.points.length; i++) {\n    bounds.extend(props.points[i]);\n  }\n\n  useEffect(()=>{\n    setBound(bounds)\n    setLoaded(true)\n  },[])\n\n  function wordWrap(str, maxWidth) {\n      let newLineStr = \"*\";\n      let done = false;\n      let res = '';\n      while (str.length > maxWidth) {\n          let found = false;\n          // Inserts new line at first whitespace of the line\n          for (let i = maxWidth - 1; i >= 0; i--) {\n              if (testWhite(str.charAt(i))) {\n                  res = res + [str.slice(0, i), newLineStr].join('');\n                  str = str.slice(i + 1);\n                  found = true;\n                  break;\n              }\n          }\n          // Inserts new line at maxWidth position, the word is too long to wrap\n          if (!found) {\n              res += [str.slice(0, maxWidth), newLineStr].join('');\n              str = str.slice(maxWidth);\n          }\n\n      }\n      return res + str;\n  }\n\n  function testWhite(x) {\n      var white = new RegExp(/^\\s$/);\n      return white.test(x.charAt(0));\n  };\n\n  let width;\n  if(props.width === true){\n    width = '58.5%';\n  }else{\n    width = '85.3%';\n  }\n\n  const mapStyles = {\n    position: 'absolute',\n    width: width,\n    height: '89.5%',\n    // margin: 'auto'\n  };\n\n  const displayMarkers = () => {\n       // console.log(\"Sorted CoOrds:\", Object.values(props.sortedCoOrds));\n       // console.log(\"Sorted CoOrds:\", props.sortedCoOrds);\n      return Object.values(props.sortedCoOrds).map((message, index) => {\n        if(message.room === props.roomName){\n          return <Marker\n                  key={index}\n                  id={index}\n                  position={{\n                    lat: message.latitude,\n                    lng: message.longitude\n                  }}\n                  onClick={() => console.log(\"You clicked me!\")}\n                  title={wordWrap(message.msg,14).split(\"*\")[0]}\n                  icon={{\n                    url: `https://chart.googleapis.com/chart?chst=d_fnote&chld=thought|1|0088FF|h|${wordWrap(message.msg,14).split(\"*\")[0]}|${wordWrap(message.msg,14).split(\"*\")[1] !== undefined ? wordWrap(message.msg,14).split(\"*\")[1] : \"\"}|${wordWrap(message.msg,14).split(\"*\")[2] !== undefined ? wordWrap(message.msg,14).split(\"*\")[2] : \"\"}`,\n                  }}\n                  />\n        }\n      })\n    }\n\n  return(\n    <div>\n    {\n      props.points.length > 0 ? <Map\n              google={props.google}\n              zoom={15}\n              style={mapStyles}\n              initialCenter={{\n                lat: props.latitude,\n                lng: props.longitude\n              }}\n              bounds={loaded === true ? bounds : bound}\n            >\n            {loaded === true ? displayMarkers() : null}\n            </Map>\n            :\n            <p>Loading...</p>\n    }\n\n    </div>\n  )\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyAW5MNODxdAncbpnSGtOIl6Gyfjo-e6w3g'\n})(MapContainer);\n\n\n\n\n\n// let msg;\n// msg = props.messages[0].message\n//\n// const wrap = (s) => s.replace(\n//   /(?![^-]{1,32}$)([^-]{1,32})\\s/g, '$1\\n'\n// );\n//\n//  let str = wrap(msg)\n//\n//  let arr = [];\n//\n//  arr = str.split(\"\\n\");\n//\n// console.log(\"The string:\", str, arr);\n","import React, {useEffect, useState} from 'react';\nimport Pusher from 'pusher-js';\nimport api from './api';\nimport './App.css';\nimport SideBar from './sidebar/SideBar';\nimport SkinnySidebar from './sidebar/SkinnySidebar';\nimport Chat from './chat/Chat';\nimport MapContainer from './map/MapContainer';\nimport axios from 'axios';\n\nconst Home = (props) => {\n  const [messages, setMessages] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [toggleChat, setToggleChat] = useState(false);\n  const [toggleSidebar, setToggleSidebar] = useState(true);\n  // const [locations, setLocations] = useState([]);\n  const [roomName, setRoomName] = useState(props.match.params.name);\n  const [user] = useState(props.match.params.user);\n  const [lastMessage, setLastMessage] = useState(\"\");\n  const [points, setPoints] = useState(null);\n  // const [pointsLoaded, setPointsLoaded] = useState(false);\n  const [sortedCoOrds] = useState({});\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n\n\n  useEffect(() => {\n    //get messages\n    api.get(`/messages/sync/${roomName}`)\n    .then(res => {\n      setMessages(res.data);\n      res.data.forEach((message,index)=>{\n        sortedCoOrds[message.name] = { latitude: message.latitude, longitude: message.longitude, msg: message.message, room: roomName };\n      })\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n\n    axios.get(\"https://extreme-ip-lookup.com/json/\")\n    .then((res)=>{\n      setLatitude(res.data.lat)\n      setLongitude(res.data.lon)\n    })\n    .catch()\n  },[]);\n\n  useEffect(() => {\n    //Get rooms\n    api.get(`/rooms/sync/${user}`)\n    .then(res => {\n      setRooms(res.data);\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n\n  },[props.match.params.name]);\n\n\n\n  useEffect(()=>{\n    const pusher = new Pusher('1bf1ac863ab88a3d0532', {\n       cluster: 'ap4'\n     });\n     const channel = pusher.subscribe('messages');\n     channel.bind('inserted', (newMessage) => {\n       setMessages([...messages, newMessage]);\n       setLastMessage(newMessage.message);\n       messages.forEach((message,index)=>{\n         sortedCoOrds[message.name] = { latitude: message.latitude, longitude: message.longitude, msg: message.message, room: roomName };\n       })\n     });\n     return () => {\n       channel.unbind_all();\n       channel.unsubscribe();\n     };\n  },[messages]);\n\n  useEffect(()=>{\n    let data = [];\n\n    messages.forEach((message,index)=>{\n      data.push({lat:message.latitude, lng:message.longitude});\n    })\n    // console.log(\"The rest:\", rest);\n    setPoints(data);\n  },[messages])\n\n  const handleToggleChat = () => {\n    if(toggleChat === false){\n      setToggleChat(true);\n    }else if(toggleChat === true){\n      setToggleChat(false);\n    }\n  }\n\n  const handleToggleSidebar= () => {\n    if(toggleSidebar === false){\n      setToggleSidebar(true);\n    }else if(toggleSidebar === true){\n      setToggleSidebar(false);\n      setToggleChat(false);\n    }\n  }\n\n  const handleRoomChange = (name) => {\n    api.post(`/user/${user}/room/${name}`)\n    .then(res=>{\n      // console.log(\"room change results:\", res.data);\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n\n    api.get(`/messages/sync/${name}`)\n    .then(res => {\n      setMessages(res.data);\n      res.data.forEach((message,index)=>{\n        sortedCoOrds[message.name] = { latitude: message.latitude, longitude: message.longitude, msg: message.message, room: name };\n      })\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n    setRoomName(name);\n    props.history.push(`/room/${name}/${user}`);\n  }\n\n\n  // console.log(\"The messages:\", messages);\n  return (\n    <div className=\"app\">\n      <div className=\"app_body\">\n        {\n          toggleSidebar === true\n          ?\n          <SideBar toggleChat={handleToggleChat} chatToggleStatus={toggleChat} toggleSidebar={handleToggleSidebar} chatRooms={rooms} handleClick={handleRoomChange}  lastMessage={lastMessage} roomName={roomName} user={user} history={props.history}/> :\n          <SkinnySidebar toggleSidebar={handleToggleSidebar}/>\n        }\n        <div className=\"chat\">\n          {\n            toggleChat === true\n            ?\n            <Chat messages={messages} roomName={roomName} user={user} rooms={rooms} lastMessage={lastMessage} latitude={latitude} longitude={longitude}/>\n            :\n            points !== null ? <MapContainer width={toggleSidebar} messages={messages} points={points} sortedCoOrds={sortedCoOrds} roomName={roomName} latitude={latitude} longitude={longitude} /> : <p>Loading...</p>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, {useEffect, useState} from 'react';\nimport api from '../api';\nimport './login.css';\n\nconst Login = (props) => {\n  const[users, setUsers] = useState([]);\n  const[toggleDrop, setToggleDrop] = useState(false);\n\n  useEffect(()=>{\n    api.get('/users')\n    .then(res => {\n        // console.log(\"The user data\",res.data);\n      setUsers(res.data);\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n  },[])\n\n  const handleToggleDrop = () => {\n\n    if( toggleDrop === true ){\n      setToggleDrop(false)\n    }else if(toggleDrop === false){\n      setToggleDrop(true)\n    }\n  }\n\n  return(\n    <>\n      <div className=\"dropdown\">\n        <button onClick={handleToggleDrop} className=\"dropbtn\">Select User</button>\n\n          {\n            toggleDrop === true\n            ?\n            <div id=\"myDropdown\" className=\"dropdown-content\">\n              <a href=\"#/room/SEI40/User1\">User1</a>\n              <a href=\"#/room/SEI40/User2\">User2</a>\n              <a href=\"#/room/SEI40/User3\">User3</a>\n              <a href=\"#/room/SEI40/User4\">User4</a>\n              <a href=\"#/room/SEI40/User5\">User5</a>\n              <a href=\"#/room/SEI40/User6\">User6</a>\n              <a href=\"#/room/SEI40/User7\">User7</a>\n              <a href=\"#/room/SEI40/User8\">User8</a>\n              <a href=\"#/room/SEI40/User9\">User9</a>\n              <a href=\"#/room/SEI40/User10\">User10</a>\n              <a href=\"#/room/SEI40/User11\">User11</a>\n            </div>\n            :\n            null\n          }\n      </div>\n    </>\n  )\n}\n\nexport default Login;\n","import React from 'react';\nimport Home from './Home';\nimport Login from './login/Login';\nimport { Route, HashRouter as Router } from 'react-router-dom';\n\nconst App = () => {\n\n  return (\n    <div className=\"app\">\n      <Router>\n        <Route exact path = \"/\" component = {Login} />\n        <Route exact path = \"/user/:user\" component = {Home} />\n        <Route exact path = \"/room/:name/:user\" component = {Home} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}