{"version":3,"sources":["api.js","sidebar/SidebarChat.js","sidebar/SideBar.js","sidebar/SkinnySidebar.js","chat/ChatHeader.js","chat/Emoji.js","chat/Message.js","chat/ChatThread.js","chat/Participant.js","chat/ChatParticipants.js","chat/Chat.js","map/MapContainer.js","Home.js","login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["api","axios","create","baseURL","SidebarChat","props","useState","lastMessage","setLastMessage","useEffect","room","length","substring","roomName","name","className","onClick","handleClick","toggleChatStatus","toggleChat","Avatar","SideBar","src","user","IconButton","history","push","toggleSidebar","placeholder","type","chatRooms","map","index","chatToggleStatus","SkinnySidebar","ChatHeader","date","seconds","Math","floor","Date","interval","timeSince","roomData","lastTimestamp","AttachFile","handleToggleThread","Emoji","onEmojiClick","event","emojiObject","getEmoji","handleToggle","Message","message","timestamp","ChatThread","see","messages","toggleEmoji","setToggleEmoji","input","setInput","latitude","setLatitude","longitude","setLongitude","locationOff","setLocationOff","getLocation","data","coords","askLocation","console","warn","get","then","res","lat","lon","catch","scrollToBottom","document","getElementById","focus","navigator","geolocation","getCurrentPosition","animateScroll","containerId","handleToggleEmoji","id","value","onChange","e","target","preventDefault","post","now","log","err","emoji","Participant","participant","ChatParticipants","participants","setParticipants","Chat","toggleThread","setToggleThread","setRoomData","GoogleApiWrapper","apiKey","loaded","setLoaded","bound","setBound","bounds","google","maps","LatLngBounds","i","points","extend","wordWrap","str","maxWidth","newLineStr","found","testWhite","charAt","slice","join","x","RegExp","test","mapStyles","width","height","style","Object","values","sortedCoOrds","position","lng","title","msg","split","icon","url","undefined","Home","setMessages","rooms","setRooms","setToggleChat","setToggleSidebar","match","params","setRoomName","setPoints","forEach","channel","Pusher","cluster","subscribe","bind","newMessage","unbind_all","unsubscribe","rest","handleToggleSidebar","Login","setUsers","toggleDrop","setToggleDrop","href","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.58a7eee5.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://map-chatr.herokuapp.com/',\n\n})\n\nexport default api;\n","import React, {useEffect,useState} from 'react';\nimport {Avatar} from '@material-ui/core';\nimport \"./SidebarChat.css\"\n\nconst SidebarChat = (props) => {\n  const [lastMessage, setLastMessage] = useState(\"\")\n\n  useEffect(()=>{\n      if(props.room.lastMessage.length <= 15){\n        setLastMessage(props.room.lastMessage);\n      }else{\n        setLastMessage(props.room.lastMessage.substring(0,20) + \" ...\");\n      }\n  },[props.room.lastMessage])\n\n  useEffect(()=>{\n    if(props.roomName === props.room.name && props.lastMessage !== \"\"){\n      if(props.lastMessage.length <= 15){\n        setLastMessage(props.lastMessage);\n      }else{\n        setLastMessage(props.lastMessage.substring(0,20) + \"...\");\n      }\n    }\n  },[props.lastMessage])\n\n  const handleClick = () => {\n    props.handleClick(props.room.name);\n    if(props.toggleChatStatus !== true){\n      props.toggleChat();\n    }\n  }\n\n  return(\n    <div className=\"sidebarChat\" onClick={handleClick}>\n      <Avatar />\n      <div className=\"sidebarChat_info\">\n        <h2>{ props.room.name }</h2>\n        <p>{ lastMessage }\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default SidebarChat;\n","import React from 'react';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchOutlined from '@material-ui/icons/SearchOutlined';\nimport {Avatar, IconButton} from '@material-ui/core';\nimport SidebarChat from './SidebarChat';\nimport \"./SideBar.css\"\n\nconst SideBar = (props) => {\n\n  return(\n    <div className=\"sidebar\">\n      <div className=\"sidebar_header\">\n        <Avatar src=\"https://avatars.githubusercontent.com/u/72368535?s=400&u=20eeecfe9dd1f5a481917319985b2de6d695a80c&v=4\"/>\n        <p><strong>Welcome:</strong> <br/>{props.user}</p>\n        <div className=\"sidebar_headerRight\">\n          <IconButton>\n            <DonutLargeIcon onClick={()=>props.history.push('/')}/>\n          </IconButton>\n          <IconButton>\n            <ChatIcon onClick={()=>props.toggleChat()}/>\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon onClick={()=>props.toggleSidebar()}/>\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"sidebar_search\">\n        <div className=\"sidebar_searchContainer\">\n          <SearchOutlined />\n          <input placeholder=\"Search\" type=\"text\" />\n        </div>\n      </div>\n      <div className=\"sidebar_chats\">\n        {\n          props.chatRooms.map((room,index) => <SidebarChat key={index} roomName={props.roomName} room={room} lastMessage={props.lastMessage} handleClick={props.handleClick} toggleChat={props.toggleChat} toggleChatStatus={props.chatToggleStatus}/>)\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default SideBar;\n","import React from 'react';\nimport {IconButton} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst SkinnySidebar = (props) => {\n  return(\n    <div className=\"skinnySidebar\">\n      <div className=\"skinnySidebar_headerRight\">\n        <IconButton>\n          <MoreVertIcon onClick={()=>props.toggleSidebar()}/>\n        </IconButton>\n      </div>\n    </div>\n  )\n}\n\nexport default SkinnySidebar;\n","import React, {useEffect, useState} from 'react';\nimport {Avatar, IconButton} from '@material-ui/core';\nimport {AttachFile, MoreVert, SearchOutlined } from '@material-ui/icons';\n\nconst ChatHeader = (props) => {\n  const timeSince = (date) => {\n\n    let seconds = Math.floor((new Date() - date) / 1000);\n\n    let interval = seconds / 31536000;\n\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" year ago..\";\n      }\n      return Math.floor(interval) + \" years ago..\";\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" month ago..\";\n      }\n      return Math.floor(interval) + \" months ago..\";\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" day ago..\";\n      }\n      return Math.floor(interval) + \" days ago..\";\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" hour ago..\";\n      }\n      return Math.floor(interval) + \" hours ago..\";\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" minute ago..\";\n      }\n      return Math.floor(interval) + \" minutes ago..\";\n    }\n    return \" just now..\";\n  }\n\n  return(\n    <div className=\"chat_header\">\n      <Avatar />\n\n      <div className=\"chat_headerInfo\">\n        <h3>{props.roomName}</h3>\n        <p>Last post was {timeSince(props.roomData.lastTimestamp)}</p>\n      </div>\n\n      <div className=\"chat_headerRight\">\n        <IconButton>\n          <SearchOutlined />\n        </IconButton>\n        <IconButton>\n          <AttachFile />\n        </IconButton>\n        <IconButton>\n          <MoreVert onClick={()=>props.handleToggleThread()}/>\n        </IconButton>\n      </div>\n    </div>\n  )\n}\n\nexport default ChatHeader;\n","import React, {useEffect, useState} from 'react';\nimport Picker from 'emoji-picker-react';\n\nconst Emoji = (props) => {\n\n  const onEmojiClick = (event, emojiObject) => {\n    props.getEmoji(emojiObject);\n    props.handleToggle();\n  };\n\n  return(\n    <div>\n       <Picker onEmojiClick={onEmojiClick} />\n    </div>\n  )\n}\n\nexport default Emoji;\n\n// {chosenEmoji ? (\n//   <span>You chose: {chosenEmoji.emoji}</span>\n// ) : (\n//   <span>No emoji Chosen</span>\n// )}\n","import React from 'react';\n\nconst Message = (props) => {\n\nconst timeSince = (date) => {\n\n  let seconds = Math.floor((new Date() - date) / 1000);\n\n  let interval = seconds / 31536000;\n\n  if (interval > 1) {\n    if(Math.floor(interval) === 1){\n      return Math.floor(interval) + \" year ago..\";\n    }\n    return Math.floor(interval) + \" years ago..\";\n  }\n  interval = seconds / 2592000;\n  if (interval > 1) {\n    if(Math.floor(interval) === 1){\n      return Math.floor(interval) + \" month ago..\";\n    }\n    return Math.floor(interval) + \" months ago..\";\n  }\n  interval = seconds / 86400;\n  if (interval > 1) {\n    if(Math.floor(interval) === 1){\n      return Math.floor(interval) + \" day ago..\";\n    }\n    return Math.floor(interval) + \" days ago..\";\n  }\n  interval = seconds / 3600;\n  if (interval > 1) {\n    if(Math.floor(interval) === 1){\n      return Math.floor(interval) + \" hour ago..\";\n    }\n    return Math.floor(interval) + \" hours ago..\";\n  }\n  interval = seconds / 60;\n  if (interval > 1) {\n    if(Math.floor(interval) === 1){\n      return Math.floor(interval) + \" minute ago..\";\n    }\n    return Math.floor(interval) + \" minutes ago..\";\n  }\n  return \" just now..\";\n}\n\n  return(\n    <>\n      <p className={`chat_message ${props.user === props.message.name ? \"chat_reciever\" : \"\"}`}>\n        <span className=\"chat_name\">{props.message.name}</span>\n          {props.message.message}\n        <span className=\"chat_timestamp\">\n          {timeSince(props.message.timestamp)}\n        </span>\n      </p>\n    </>\n  )\n}\n\nexport default Message;\n","import React, {useEffect, useState} from 'react';\nimport Emoji from './Emoji';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon'\nimport { animateScroll } from \"react-scroll\";\nimport MicIcon from '@material-ui/icons/Mic'\nimport Message from './Message'\nimport axios from 'axios';\nimport api from '../api'\n\nconst ChatThread = (props) => {\n\n  const see = props.messages;\n\n  const [toggleEmoji, setToggleEmoji] = useState(false);\n  const [input, setInput] = useState('');\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [locationOff, setLocationOff] = useState(false);\n\n  // console.log(\"The browser:\", navigator.permissions);\n\n  useEffect(()=>{\n    scrollToBottom();\n  },[props.messages])\n\n  useEffect(()=>{\n    document.getElementById(\"test\").focus();\n    navigator.geolocation.getCurrentPosition(getLocation,askLocation);\n\n  },[input])\n\n  function getLocation(data){\n    setLatitude(data.coords.latitude)\n    setLongitude(data.coords.longitude)\n    setLocationOff(false)\n  }\n  function askLocation(data){\n    console.warn(\"Location not set\");\n    axios.get(\"https://extreme-ip-lookup.com/json/\")\n    .then((res)=>{\n      setLatitude(res.data.lat)\n      setLongitude(res.data.lon)\n    })\n    .catch()\n\n    setLocationOff(true);\n  }\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    api.post(`/messages/new`, {\n      message: input,\n      name: props.user,\n      timestamp: Date.now(),\n      room: props.roomName,\n      latitude: latitude,\n      longitude: longitude\n    }).then((res=>{\n      console.log(\"Message Succesfully sent\");\n      setInput(\"\");\n    })).catch(err=>console.log(\"I am throwing and error:\", err));\n  };\n\n  const scrollToBottom = () => {\n    animateScroll.scrollToBottom({\n      containerId: \"scroll\"\n    });\n  };\n\n  const handleToggleEmoji = () => {\n    if(toggleEmoji === false){\n      setToggleEmoji(true);\n    }else if(toggleEmoji === true){\n      setToggleEmoji(false);\n    }\n  }\n\n  const setEmoji = (value) => {\n    setInput(input + value.emoji)\n  }\n\n  return(\n    <>\n      <div className=\"chat_body\" id=\"scroll\">\n        {\n          props.messages.map((message,index) => see[index].room === props.roomName ? <Message key={index} message={message} user={props.user} /> : null)\n        }\n      </div>\n\n      {\n        locationOff === true ? <div className=\"\"><strong>Please turn on your location settings</strong> <br/>(We are busy using an estimated location based on you IP Address)</div> : null\n      }\n\n      <div className=\"chat_footer\">\n        <InsertEmoticonIcon onClick={handleToggleEmoji} />\n        <form>\n          <input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Type a message\"\n            type=\"text\"\n            id=\"test\"\n          />\n          <button onClick={sendMessage}>Send a message</button>\n        </form>\n        <MicIcon />\n      </div>\n\n      {\n        toggleEmoji === true ? <Emoji getEmoji={setEmoji} handleToggle={handleToggleEmoji}/> : null\n      }\n    </>\n  )\n}\n\nexport default ChatThread;\n","import React, {useEffect, useState} from 'react';\nimport {Avatar} from '@material-ui/core';\n\nconst Participant = ({participant}) => {\n  const [lastMessage, setLastMessage] = useState(\"\");\n\n  useEffect(()=>{\n    if(participant.lastMessage.length <= 15){\n      setLastMessage(participant.lastMessage);\n    }else{\n      setLastMessage(participant.lastMessage.substring(0,20) + \" ...\");\n    }\n  },[participant.lastMessage])\n\n  return(\n    <div className=\"sidebarChat\">\n      <Avatar />\n      <div className=\"sidebarChat_info\">\n        <h2>{ participant.name }</h2>\n        <p>{ lastMessage }</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Participant;\n","import React, {useEffect, useState} from 'react';\nimport Participant from './Participant'\nimport api from '../api';\n\nconst ChatParticipants = (props) => {\n\n  const [participants, setParticipants] = useState([]);\n\n  useEffect(()=>{\n    api.get(`room/${props.roomName}`)\n    .then(res=>{\n      setParticipants(res.data.participants)\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n  },[props.roomName])\n\n  return(\n    <div className=\"chat_participants\">\n      {\n        participants.map((participant,index) => <Participant key={index} participant={participant}/> )\n      }\n    </div>\n  )\n}\n\nexport default ChatParticipants;\n","import React, { useState, useEffect } from 'react';\nimport ChatHeader from './ChatHeader'\nimport ChatThread from './ChatThread'\nimport ChatParticipants from './ChatParticipants'\nimport \"./Chat.css\"\nimport api from '../api';\n\n\nconst Chat = (props) => {\n  const [toggleThread, setToggleThread] = useState(true);\n  const [roomData, setRoomData] = useState([]);\n\n\n  useEffect(()=>{\n    api.get(`room/${props.roomName}`)\n    .then(res=>{\n      setRoomData(res.data)\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n  },[props.messages])\n\n  const handleToggleThread = () => {\n    if(toggleThread === false){\n      setToggleThread(true);\n    }else if(toggleThread === true){\n      setToggleThread(false);\n    }\n  }\n\n  return(\n    <>\n\n      <ChatHeader handleToggleThread={handleToggleThread} roomName={props.roomName} roomData={roomData}/>\n\n      {\n        toggleThread === true ? <ChatThread messages={props.messages} roomName={props.roomName} user={props.user}/> : <ChatParticipants roomName={props.roomName} />\n      }\n\n    </>\n  ); // return\n}; //Function\n\nexport default Chat;\n","import React, {useEffect, useState} from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\nconst MapContainer = (props) => {\n\n  const [loaded, setLoaded] = useState(false);\n  const [bound, setBound] = useState();\n  const [obj, setObj] = useState({});\n\n  const bounds = new props.google.maps.LatLngBounds();\n  for (var i = 0; i < props.points.length; i++) {\n    bounds.extend(props.points[i]);\n  }\n\n  useEffect(()=>{\n\n    setBound(bounds)\n    setLoaded(true)\n  },[])\n\n  function wordWrap(str, maxWidth) {\n      let newLineStr = \"*\";\n      let done = false;\n      let res = '';\n      while (str.length > maxWidth) {\n          let found = false;\n          // Inserts new line at first whitespace of the line\n          for (let i = maxWidth - 1; i >= 0; i--) {\n              if (testWhite(str.charAt(i))) {\n                  res = res + [str.slice(0, i), newLineStr].join('');\n                  str = str.slice(i + 1);\n                  found = true;\n                  break;\n              }\n          }\n          // Inserts new line at maxWidth position, the word is too long to wrap\n          if (!found) {\n              res += [str.slice(0, maxWidth), newLineStr].join('');\n              str = str.slice(maxWidth);\n          }\n\n      }\n\n      return res + str;\n  }\n\n  function testWhite(x) {\n      var white = new RegExp(/^\\s$/);\n      return white.test(x.charAt(0));\n  };\n\n  let width;\n  if(props.width === true){\n    width = '58.5%';\n  }else{\n    width = '85.3%';\n  }\n\n  const mapStyles = {\n    width: width,\n    height: '89.5%'\n  };\n\n  const displayMarkers = () => {\n       // console.log(\"Sorted CoOrds:\", Object.values(props.sortedCoOrds));\n       // console.log(\"Sorted CoOrds:\", props.sortedCoOrds);\n      return Object.values(props.sortedCoOrds).map((message, index) => {\n        if(message.room === props.roomName){\n          return <Marker\n                  key={index}\n                  id={index}\n                  position={{\n                    lat: message.latitude,\n                    lng: message.longitude\n                  }}\n                  onClick={() => console.log(\"You clicked me!\")}\n                  title={wordWrap(message.msg,14).split(\"*\")[0]}\n                  icon={{\n                    url: `https://chart.googleapis.com/chart?chst=d_fnote&chld=thought|1|0088FF|h|${wordWrap(message.msg,14).split(\"*\")[0]}|${wordWrap(message.msg,14).split(\"*\")[1] !== undefined ? wordWrap(message.msg,14).split(\"*\")[1] : \"\"}|${wordWrap(message.msg,14).split(\"*\")[2] !== undefined ? wordWrap(message.msg,14).split(\"*\")[2] : \"\"}`,\n                  }}\n                  />\n        }\n      })\n    }\n\n  return(\n    <div>\n    {\n      props.points.length > 0 ? <Map\n              google={props.google}\n\n              style={mapStyles}\n\n              bounds={loaded === true ? bounds : bound}\n            >\n            {loaded === true ? displayMarkers() : null}\n            </Map>\n            :\n            <p>Loading...</p>\n    }\n\n    </div>\n  )\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyAW5MNODxdAncbpnSGtOIl6Gyfjo-e6w3g'\n})(MapContainer);\n\n\n\n\n\n// let msg;\n// msg = props.messages[0].message\n//\n// const wrap = (s) => s.replace(\n//   /(?![^-]{1,32}$)([^-]{1,32})\\s/g, '$1\\n'\n// );\n//\n//  let str = wrap(msg)\n//\n//  let arr = [];\n//\n//  arr = str.split(\"\\n\");\n//\n// console.log(\"The string:\", str, arr);\n","import React, {useEffect, useState} from 'react';\nimport Pusher from 'pusher-js';\nimport api from './api';\nimport './App.css';\nimport SideBar from './sidebar/SideBar';\nimport SkinnySidebar from './sidebar/SkinnySidebar';\nimport Chat from './chat/Chat';\nimport MapContainer from './map/MapContainer';\n\n// const FAKE_SIDEBAR_ROOMS = [\"SEI40\",\"Hunting\",\"Fishing\",\"Safari\",\"Crime\",\"Company-XYZ-reps\"];\nconst FAKE_USER = \"Swaff-y\";\n\nconst Home = (props) => {\n  const [messages, setMessages] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [toggleChat, setToggleChat] = useState(false);\n  const [toggleSidebar, setToggleSidebar] = useState(true);\n  const [locations, setLocations] = useState([]);\n  const [roomName, setRoomName] = useState(props.match.params.name);\n  const [user, setUser] = useState(props.match.params.user);\n  const [lastMessage, setLastMessage] = useState(\"\");\n  const [points, setPoints] = useState([]);\n  const [sortedCoOrds, setSortedCoOrds] = useState({});\n\n\n  useEffect(() => {\n    //get messages\n    api.get(`/messages/sync/${roomName}`)\n    .then(res => {\n      setMessages(res.data);\n      res.data.forEach((message,index)=>{\n        sortedCoOrds[message.name] = { latitude: message.latitude, longitude: message.longitude, msg: message.message, room: roomName };\n      })\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n  },[]);\n\n  useEffect(() => {\n    //Get rooms\n    api.get(`/rooms/sync/${user}`)\n    .then(res => {\n      setRooms(res.data);\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n\n  },[props.match.params.name]);\n\n\n\n  useEffect(()=>{\n    const pusher = new Pusher('1bf1ac863ab88a3d0532', {\n       cluster: 'ap4'\n     });\n     const channel = pusher.subscribe('messages');\n     channel.bind('inserted', (newMessage) => {\n       setMessages([...messages, newMessage]);\n       setLastMessage(newMessage.message);\n       messages.forEach((message,index)=>{\n         sortedCoOrds[message.name] = { latitude: message.latitude, longitude: message.longitude, msg: message.message, room: roomName };\n       })\n     });\n     return () => {\n       channel.unbind_all();\n       channel.unsubscribe();\n     };\n  },[messages]);\n\n  useEffect(()=>{\n    let rest = [];\n\n    messages.forEach((message,index)=>{\n      rest.push({lat:message.latitude, lng:message.longitude});\n    })\n    // console.log(\"The rest:\", rest);\n    setPoints(rest)\n  },[messages])\n\n  const handleToggleChat = () => {\n    if(toggleChat === false){\n      setToggleChat(true);\n    }else if(toggleChat === true){\n      setToggleChat(false);\n    }\n  }\n\n  const handleToggleSidebar= () => {\n    if(toggleSidebar === false){\n      setToggleSidebar(true);\n    }else if(toggleSidebar === true){\n      setToggleSidebar(false);\n      setToggleChat(false);\n    }\n  }\n\n  const handleRoomChange = (name) => {\n    api.post(`/user/${user}/room/${name}`)\n    .then(res=>{\n      // console.log(\"room change results:\", res.data);\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n\n    api.get(`/messages/sync/${name}`)\n    .then(res => {\n      setMessages(res.data);\n      res.data.forEach((message,index)=>{\n        sortedCoOrds[message.name] = { latitude: message.latitude, longitude: message.longitude, msg: message.message, room: name };\n      })\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n    setRoomName(name);\n    props.history.push(`/room/${name}/${user}`);\n  }\n\n  // console.log(\"The messages:\", messages);\n  return (\n    <div className=\"app\">\n      <div className=\"app_body\">\n        {\n          toggleSidebar === true\n          ?\n          <SideBar toggleChat={handleToggleChat} chatToggleStatus={toggleChat} toggleSidebar={handleToggleSidebar} chatRooms={rooms} handleClick={handleRoomChange}  lastMessage={lastMessage} roomName={roomName} user={user} history={props.history}/> : \n          <SkinnySidebar toggleSidebar={handleToggleSidebar}/>\n        }\n        <div className=\"chat\">\n          {\n            toggleChat === true\n            ?\n            <Chat messages={messages} roomName={roomName} user={user} rooms={rooms} lastMessage={lastMessage}/>\n            :\n            <MapContainer messages={messages} points={points} sortedCoOrds={sortedCoOrds} roomName={roomName}/>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, {useEffect, useState} from 'react';\nimport api from '../api';\nimport './login.css';\n\nconst Login = (props) => {\n  const[users, setUsers] = useState([]);\n  const[toggleDrop, setToggleDrop] = useState(false);\n\n  useEffect(()=>{\n    api.get('/users')\n    .then(res => {\n        // console.log(\"The user data\",res.data);\n      setUsers(res.data);\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n  },[])\n\n  const handleToggleDrop = () => {\n\n    if( toggleDrop === true ){\n      setToggleDrop(false)\n    }else if(toggleDrop === false){\n      setToggleDrop(true)\n    }\n  }\n\n  return(\n    <>\n      <div className=\"dropdown\">\n        <button onClick={handleToggleDrop} className=\"dropbtn\">Dropdown</button>\n\n          {\n            toggleDrop === true\n            ?\n            <div id=\"myDropdown\" className=\"dropdown-content\">\n              <a href=\"#/room/SEI40/User1\">User1</a>\n              <a href=\"#/room/SEI40/User2\">User2</a>\n              <a href=\"#/room/SEI40/User3\">User3</a>\n              <a href=\"#/room/SEI40/User4\">User4</a>\n              <a href=\"#/room/SEI40/User5\">User5</a>\n              <a href=\"#/room/SEI40/User6\">User6</a>\n              <a href=\"#/room/SEI40/User7\">User7</a>\n              <a href=\"#/room/SEI40/User8\">User8</a>\n              <a href=\"#/room/SEI40/User9\">User9</a>\n              <a href=\"#/room/SEI40/User10\">User10</a>\n              <a href=\"#/room/SEI40/User11\">User11</a>\n            </div>\n            :\n            null\n\n          }\n\n\n      </div>\n    </>\n  )\n}\n\nexport default Login;\n","import React from 'react';\nimport Home from './Home';\nimport Login from './login/Login';\nimport { Link, Route, HashRouter as Router } from 'react-router-dom';\n\nconst App = () => {\n\n  return (\n    <div className=\"app\">\n      <Router>\n        <Route exact path = \"/\" component = {Login} />\n        <Route exact path = \"/user/:user\" component = {Home} />\n        <Route exact path = \"/room/:name/:user\" component = {Home} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}