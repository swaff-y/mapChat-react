[{"/Users/kyleswaffield/sei40/projects/whatsapp/whatsapp/src/App.js":"1","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/index.js":"2","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/App.js":"3","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/reportWebVitals.js":"4","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/api.js":"5","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/Chat.js":"6","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/ChatThread.js":"7","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/ChatParticipants.js":"8","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/ChatHeader.js":"9","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/Message.js":"10","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/Participant.js":"11","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/map/MapContainer.js":"12","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/sidebar/SkinnySidebar.js":"13","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/sidebar/SideBar.js":"14","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/sidebar/SidebarChat.js":"15","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/Home.js":"16","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/login/Login.js":"17","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/Emoji.js":"18"},{"size":257,"mtime":1611913264128,"results":"19","hashOfConfig":"20"},{"size":500,"mtime":1611908559749,"results":"21","hashOfConfig":"22"},{"size":471,"mtime":1612403902006,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1611908559750,"results":"24","hashOfConfig":"22"},{"size":213,"mtime":1612423323155,"results":"25","hashOfConfig":"22"},{"size":1197,"mtime":1612424948840,"results":"26","hashOfConfig":"22"},{"size":3257,"mtime":1612435200883,"results":"27","hashOfConfig":"22"},{"size":657,"mtime":1612425226376,"results":"28","hashOfConfig":"22"},{"size":1975,"mtime":1612351489211,"results":"29","hashOfConfig":"22"},{"size":1545,"mtime":1612351513904,"results":"30","hashOfConfig":"22"},{"size":808,"mtime":1612425800827,"results":"31","hashOfConfig":"22"},{"size":3686,"mtime":1612432407647,"results":"32","hashOfConfig":"22"},{"size":427,"mtime":1612002114910,"results":"33","hashOfConfig":"22"},{"size":4534,"mtime":1612420367816,"results":"34","hashOfConfig":"22"},{"size":1147,"mtime":1612263637673,"results":"35","hashOfConfig":"22"},{"size":5716,"mtime":1612435584729,"results":"36","hashOfConfig":"22"},{"size":1544,"mtime":1612390341942,"results":"37","hashOfConfig":"22"},{"size":459,"mtime":1612231343935,"results":"38","hashOfConfig":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1r65jmx",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"3psvol",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},"/Users/kyleswaffield/sei40/projects/whatsapp/whatsapp/src/App.js",[],["83","84"],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/index.js",[],["85","86"],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/App.js",[],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/reportWebVitals.js",[],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/api.js",[],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/Chat.js",["87"],"import React, { useState, useEffect } from 'react';\nimport ChatHeader from './ChatHeader'\nimport ChatThread from './ChatThread'\nimport ChatParticipants from './ChatParticipants'\nimport \"./Chat.css\"\nimport api from '../api';\n\n\nconst Chat = (props) => {\n  // const [toggleThread, setToggleThread] = useState(true);\n  const [roomData, setRoomData] = useState([]);\n\n\n  useEffect(()=>{\n    api.get(`room/${props.roomName}`)\n    .then(res=>{\n      setRoomData(res.data)\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n  },[props.messages])\n\n  // const handleToggleThread = () => {\n  //   if(toggleThread === false){\n  //     setToggleThread(true);\n  //   }else if(toggleThread === true){\n  //     setToggleThread(false);\n  //   }\n  // }\n\n  return(\n    <>\n\n      <ChatHeader handleToggleThread={props.handleToggleThread} roomName={props.roomName} roomData={roomData} latitude={props.latitude} longitude={props.longitude}/>\n\n      {\n        props.toggleThread === true ? <ChatThread messages={props.messages} roomName={props.roomName} user={props.user}/> : <ChatParticipants roomName={props.roomName} mapClick={props.mapClick}/>\n      }\n\n    </>\n  ); // return\n}; //Function\n\nexport default Chat;\n","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/ChatThread.js",[],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/ChatParticipants.js",[],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/ChatHeader.js",["88","89"],"import React, {useEffect, useState} from 'react';\nimport {Avatar, IconButton} from '@material-ui/core';\nimport {AttachFile, MoreVert, SearchOutlined } from '@material-ui/icons';\n\nconst ChatHeader = (props) => {\n  const timeSince = (date) => {\n\n    let seconds = Math.floor((new Date() - date) / 1000);\n\n    let interval = seconds / 31536000;\n\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" year ago..\";\n      }\n      return Math.floor(interval) + \" years ago..\";\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" month ago..\";\n      }\n      return Math.floor(interval) + \" months ago..\";\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" day ago..\";\n      }\n      return Math.floor(interval) + \" days ago..\";\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" hour ago..\";\n      }\n      return Math.floor(interval) + \" hours ago..\";\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" minute ago..\";\n      }\n      return Math.floor(interval) + \" minutes ago..\";\n    }\n    return \" just now..\";\n  }\n\n  return(\n    <div className=\"chat_header\">\n      <Avatar />\n\n      <div className=\"chat_headerInfo\">\n        <h3>{props.roomName}</h3>\n        <p>Last post was {timeSince(props.roomData.lastTimestamp)}</p>\n      </div>\n\n      <div className=\"chat_headerRight\">\n        <IconButton>\n          <SearchOutlined />\n        </IconButton>\n        <IconButton>\n          <AttachFile />\n        </IconButton>\n        <IconButton>\n          <MoreVert onClick={()=>props.handleToggleThread()}/>\n        </IconButton>\n      </div>\n    </div>\n  )\n}\n\nexport default ChatHeader;\n","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/Message.js",[],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/Participant.js",[],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/map/MapContainer.js",["90","91","92","93","94"],"import React, {useEffect, useState} from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\nconst MapContainer = (props) => {\n\n  const [loaded, setLoaded] = useState(false);\n  const [bound, setBound] = useState();\n  const [obj, setObj] = useState({});\n\n  const bounds = new props.google.maps.LatLngBounds();\n  for (var i = 0; i < props.points.length; i++) {\n    bounds.extend(props.points[i]);\n  }\n\n  useEffect(()=>{\n    setBound(bounds)\n    setLoaded(true)\n  },[])\n\n  function wordWrap(str, maxWidth) {\n      let newLineStr = \"*\";\n      let done = false;\n      let res = '';\n      while (str.length > maxWidth) {\n          let found = false;\n          // Inserts new line at first whitespace of the line\n          for (let i = maxWidth - 1; i >= 0; i--) {\n              if (testWhite(str.charAt(i))) {\n                  res = res + [str.slice(0, i), newLineStr].join('');\n                  str = str.slice(i + 1);\n                  found = true;\n                  break;\n              }\n          }\n          // Inserts new line at maxWidth position, the word is too long to wrap\n          if (!found) {\n              res += [str.slice(0, maxWidth), newLineStr].join('');\n              str = str.slice(maxWidth);\n          }\n\n      }\n      return res + str;\n  }\n\n  function testWhite(x) {\n      var white = new RegExp(/^\\s$/);\n      return white.test(x.charAt(0));\n  };\n\n  let width;\n  if(props.width === true){\n    width = '58.5%';\n  }else{\n    width = '85.3%';\n  }\n\n  const mapStyles = {\n    position: 'absolute',\n    width: width,\n    height: '89.5%',\n    // margin: 'auto'\n  };\n\n  const handleClick = (name) => {\n    props.handleMapClick(name);\n  }\n\n  console.log(\"lat:\", props.sortedCoOrds);\n\n  const displayMarkers = () => {\n       // console.log(\"Sorted CoOrds:\", Object.values(props.sortedCoOrds));\n       // console.log(\"Sorted CoOrds:\", props.sortedCoOrds);\n      return Object.values(props.sortedCoOrds).map((message, index) => {\n        if(message.room === props.roomName){\n          return <Marker\n                  key={index}\n                  id={index}\n                  position={{\n                    lat: message.latitude,\n                    lng: message.longitude\n                  }}\n                  onClick={()=>handleClick(message.name)}\n                  title={wordWrap(message.msg,14).split(\"*\")[0]}\n                  icon={{\n                    url: `https://chart.googleapis.com/chart?chst=d_fnote&chld=thought|1|0088FF|h|${wordWrap(message.msg,14).split(\"*\")[0]}|${wordWrap(message.msg,14).split(\"*\")[1] !== undefined ? wordWrap(message.msg,14).split(\"*\")[1] : \"\"}|${wordWrap(message.msg,14).split(\"*\")[2] !== undefined ? wordWrap(message.msg,14).split(\"*\")[2] : \"\"}`,\n                  }}\n                  />\n        }\n      })\n    }\n\n  return(\n    <div>\n    {\n      props.points.length > 0 ? <Map\n              google={props.google}\n              zoom={15}\n              style={mapStyles}\n              initialCenter={{\n                lat: props.latitude,\n                lng: props.longitude\n              }}\n              bounds={loaded === true ? bounds : bound}\n            >\n            {loaded === true ? displayMarkers() : null}\n            </Map>\n            :\n            <p className=\"app_center\">No Chats on thread</p>\n    }\n\n    </div>\n  )\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyAW5MNODxdAncbpnSGtOIl6Gyfjo-e6w3g'\n})(MapContainer);\n\n\n\n\n\n// let msg;\n// msg = props.messages[0].message\n//\n// const wrap = (s) => s.replace(\n//   /(?![^-]{1,32}$)([^-]{1,32})\\s/g, '$1\\n'\n// );\n//\n//  let str = wrap(msg)\n//\n//  let arr = [];\n//\n//  arr = str.split(\"\\n\");\n//\n// console.log(\"The string:\", str, arr);\n","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/sidebar/SkinnySidebar.js",[],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/sidebar/SideBar.js",[],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/sidebar/SidebarChat.js",["95"],"import React, {useEffect,useState} from 'react';\nimport {Avatar} from '@material-ui/core';\nimport \"./SidebarChat.css\"\n\nconst SidebarChat = (props) => {\n  const [lastMessage, setLastMessage] = useState(\"\")\n\n  useEffect(()=>{\n      if(props.room.lastMessage.length <= 15){\n        setLastMessage(props.room.lastMessage);\n      }else{\n        setLastMessage(props.room.lastMessage.substring(0,20) + \" ...\");\n      }\n  },[props.room.lastMessage])\n\n  useEffect(()=>{\n    if(props.roomName === props.room.name && props.lastMessage !== \"\"){\n      if(props.lastMessage.length <= 15){\n        setLastMessage(props.lastMessage);\n      }else{\n        setLastMessage(props.lastMessage.substring(0,20) + \"...\");\n      }\n    }\n  },[props.lastMessage])\n\n  const handleClick = () => {\n    props.handleClick(props.room.name);\n    if(props.toggleChatStatus !== true){\n      props.toggleChat();\n    }\n  }\n\n  return(\n    <div className=\"sidebarChat\" onClick={handleClick}>\n      <Avatar />\n      <div className=\"sidebarChat_info\">\n        <h2>{ props.room.name }</h2>\n        <p>{ lastMessage }\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default SidebarChat;\n","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/Home.js",["96","97","98"],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/login/Login.js",["99"],"import React, {useEffect, useState} from 'react';\nimport api from '../api';\nimport './login.css';\n\nconst Login = (props) => {\n  const[users, setUsers] = useState([]);\n  const[toggleDrop, setToggleDrop] = useState(false);\n\n  useEffect(()=>{\n    api.get('/users')\n    .then(res => {\n        // console.log(\"The user data\",res.data);\n      setUsers(res.data);\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n  },[])\n\n  const handleToggleDrop = () => {\n\n    if( toggleDrop === true ){\n      setToggleDrop(false)\n    }else if(toggleDrop === false){\n      setToggleDrop(true)\n    }\n  }\n\n  return(\n    <>\n      <div className=\"dropdown\">\n        <button onClick={handleToggleDrop} className=\"dropbtn\">Select User</button>\n\n          {\n            toggleDrop === true\n            ?\n            <div id=\"myDropdown\" className=\"dropdown-content\">\n              <a href=\"#/room/SEI40/User1\">User1</a>\n              <a href=\"#/room/SEI40/User2\">User2</a>\n              <a href=\"#/room/SEI40/User3\">User3</a>\n              <a href=\"#/room/SEI40/User4\">User4</a>\n              <a href=\"#/room/SEI40/User5\">User5</a>\n              <a href=\"#/room/SEI40/User6\">User6</a>\n              <a href=\"#/room/SEI40/User7\">User7</a>\n              <a href=\"#/room/SEI40/User8\">User8</a>\n              <a href=\"#/room/SEI40/User9\">User9</a>\n              <a href=\"#/room/SEI40/User10\">User10</a>\n              <a href=\"#/room/SEI40/User11\">User11</a>\n            </div>\n            :\n            null\n          }\n      </div>\n    </>\n  )\n}\n\nexport default Login;\n","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/Emoji.js",["100","101"],"import React, {useEffect, useState} from 'react';\nimport Picker from 'emoji-picker-react';\n\nconst Emoji = (props) => {\n\n  const onEmojiClick = (event, emojiObject) => {\n    props.getEmoji(emojiObject);\n    props.handleToggle();\n  };\n\n  return(\n    <div>\n       <Picker onEmojiClick={onEmojiClick} />\n    </div>\n  )\n}\n\nexport default Emoji;\n\n// {chosenEmoji ? (\n//   <span>You chose: {chosenEmoji.emoji}</span>\n// ) : (\n//   <span>No emoji Chosen</span>\n// )}\n",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"104","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":22,"column":5,"nodeType":"110","endLine":22,"endColumn":21,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":16,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"116","line":1,"column":27,"nodeType":"114","messageId":"115","endLine":1,"endColumn":35},{"ruleId":"112","severity":1,"message":"117","line":8,"column":10,"nodeType":"114","messageId":"115","endLine":8,"endColumn":13},{"ruleId":"112","severity":1,"message":"118","line":8,"column":15,"nodeType":"114","messageId":"115","endLine":8,"endColumn":21},{"ruleId":"108","severity":1,"message":"119","line":18,"column":5,"nodeType":"110","endLine":18,"endColumn":7,"suggestions":"120"},{"ruleId":"112","severity":1,"message":"121","line":22,"column":11,"nodeType":"114","messageId":"115","endLine":22,"endColumn":15},{"ruleId":"122","severity":1,"message":"123","line":73,"column":69,"nodeType":"124","messageId":"125","endLine":73,"endColumn":71},{"ruleId":"108","severity":1,"message":"126","line":24,"column":5,"nodeType":"110","endLine":24,"endColumn":24,"suggestions":"127"},{"ruleId":"108","severity":1,"message":"128","line":54,"column":5,"nodeType":"110","endLine":54,"endColumn":7,"suggestions":"129"},{"ruleId":"108","severity":1,"message":"130","line":66,"column":5,"nodeType":"110","endLine":66,"endColumn":30,"suggestions":"131"},{"ruleId":"108","severity":1,"message":"128","line":97,"column":5,"nodeType":"110","endLine":97,"endColumn":15,"suggestions":"132"},{"ruleId":"112","severity":1,"message":"133","line":6,"column":9,"nodeType":"114","messageId":"115","endLine":6,"endColumn":14},{"ruleId":"112","severity":1,"message":"113","line":1,"column":16,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"116","line":1,"column":27,"nodeType":"114","messageId":"115","endLine":1,"endColumn":35},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],["134"],["135"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.roomName'. Either include it or remove the dependency array.","ArrayExpression",["136"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'obj' is assigned a value but never used.","'setObj' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'bounds'. Either include it or remove the dependency array.",["137"],"'done' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'props.room.name' and 'props.roomName'. Either include them or remove the dependency array.",["138"],"React Hook useEffect has missing dependencies: 'roomName' and 'sortedCoOrds'. Either include them or remove the dependency array.",["139"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["140"],["141"],"'users' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [props.messages, props.roomName]",{"range":"154","text":"155"},"Update the dependencies array to be: [bounds]",{"range":"156","text":"157"},"Update the dependencies array to be: [props.lastMessage, props.room.name, props.roomName]",{"range":"158","text":"159"},"Update the dependencies array to be: [roomName, sortedCoOrds]",{"range":"160","text":"161"},"Update the dependencies array to be: [props.match.params.name, user]",{"range":"162","text":"163"},"Update the dependencies array to be: [messages, roomName, sortedCoOrds]",{"range":"164","text":"165"},[524,540],"[props.messages, props.roomName]",[488,490],"[bounds]",[717,736],"[props.lastMessage, props.room.name, props.roomName]",[1822,1824],"[roomName, sortedCoOrds]",[2005,2030],"[props.match.params.name, user]",[2961,2971],"[messages, roomName, sortedCoOrds]"]