[{"/Users/kyleswaffield/sei40/projects/whatsapp/whatsapp/src/App.js":"1","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/index.js":"2","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/App.js":"3","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/reportWebVitals.js":"4","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/api.js":"5","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/Chat.js":"6","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/ChatThread.js":"7","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/ChatParticipants.js":"8","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/ChatHeader.js":"9","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/Message.js":"10","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/Participant.js":"11","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/map/MapContainer.js":"12","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/sidebar/SkinnySidebar.js":"13","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/sidebar/SideBar.js":"14","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/sidebar/SidebarChat.js":"15","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/Home.js":"16","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/login/Login.js":"17","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/Emoji.js":"18"},{"size":257,"mtime":1611913264128,"results":"19","hashOfConfig":"20"},{"size":500,"mtime":1611908559749,"results":"21","hashOfConfig":"22"},{"size":477,"mtime":1612227425997,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1611908559750,"results":"24","hashOfConfig":"22"},{"size":127,"mtime":1612362689995,"results":"25","hashOfConfig":"22"},{"size":1082,"mtime":1612325879381,"results":"26","hashOfConfig":"22"},{"size":3093,"mtime":1612350862847,"results":"27","hashOfConfig":"22"},{"size":630,"mtime":1612326301839,"results":"28","hashOfConfig":"22"},{"size":1975,"mtime":1612351489211,"results":"29","hashOfConfig":"22"},{"size":1545,"mtime":1612351513904,"results":"30","hashOfConfig":"22"},{"size":651,"mtime":1612325643869,"results":"31","hashOfConfig":"22"},{"size":3356,"mtime":1612349949003,"results":"32","hashOfConfig":"22"},{"size":427,"mtime":1612002114910,"results":"33","hashOfConfig":"22"},{"size":1632,"mtime":1612357580635,"results":"34","hashOfConfig":"22"},{"size":1147,"mtime":1612263637673,"results":"35","hashOfConfig":"22"},{"size":4301,"mtime":1612357651856,"results":"36","hashOfConfig":"22"},{"size":1544,"mtime":1612357995581,"results":"37","hashOfConfig":"22"},{"size":459,"mtime":1612231343935,"results":"38","hashOfConfig":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1r65jmx",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1weqcja",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},"/Users/kyleswaffield/sei40/projects/whatsapp/whatsapp/src/App.js",[],["85","86"],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/index.js",[],["87","88"],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/App.js",["89"],"import React from 'react';\nimport Home from './Home';\nimport Login from './login/Login';\nimport { Link, Route, HashRouter as Router } from 'react-router-dom';\n\nconst App = () => {\n\n  return (\n    <div className=\"app\">\n      <Router>\n        <Route exact path = \"/\" component = {Login} />\n        <Route exact path = \"/user/:user\" component = {Home} />\n        <Route exact path = \"/room/:name/:user\" component = {Home} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/reportWebVitals.js",[],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/api.js",[],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/Chat.js",["90"],"import React, { useState, useEffect } from 'react';\nimport ChatHeader from './ChatHeader'\nimport ChatThread from './ChatThread'\nimport ChatParticipants from './ChatParticipants'\nimport \"./Chat.css\"\nimport api from '../api';\n\n\nconst Chat = (props) => {\n  const [toggleThread, setToggleThread] = useState(true);\n  const [roomData, setRoomData] = useState([]);\n\n\n  useEffect(()=>{\n    api.get(`room/${props.roomName}`)\n    .then(res=>{\n      setRoomData(res.data)\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n  },[props.messages])\n\n  const handleToggleThread = () => {\n    if(toggleThread === false){\n      setToggleThread(true);\n    }else if(toggleThread === true){\n      setToggleThread(false);\n    }\n  }\n\n  return(\n    <>\n\n      <ChatHeader handleToggleThread={handleToggleThread} roomName={props.roomName} roomData={roomData}/>\n\n      {\n        toggleThread === true ? <ChatThread messages={props.messages} roomName={props.roomName} user={props.user}/> : <ChatParticipants roomName={props.roomName} />\n      }\n\n    </>\n  ); // return\n}; //Function\n\nexport default Chat;\n","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/ChatThread.js",[],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/ChatParticipants.js",[],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/ChatHeader.js",["91","92"],"import React, {useEffect, useState} from 'react';\nimport {Avatar, IconButton} from '@material-ui/core';\nimport {AttachFile, MoreVert, SearchOutlined } from '@material-ui/icons';\n\nconst ChatHeader = (props) => {\n  const timeSince = (date) => {\n\n    let seconds = Math.floor((new Date() - date) / 1000);\n\n    let interval = seconds / 31536000;\n\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" year ago..\";\n      }\n      return Math.floor(interval) + \" years ago..\";\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" month ago..\";\n      }\n      return Math.floor(interval) + \" months ago..\";\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" day ago..\";\n      }\n      return Math.floor(interval) + \" days ago..\";\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" hour ago..\";\n      }\n      return Math.floor(interval) + \" hours ago..\";\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n      if(Math.floor(interval) === 1){\n        return Math.floor(interval) + \" minute ago..\";\n      }\n      return Math.floor(interval) + \" minutes ago..\";\n    }\n    return \" just now..\";\n  }\n\n  return(\n    <div className=\"chat_header\">\n      <Avatar />\n\n      <div className=\"chat_headerInfo\">\n        <h3>{props.roomName}</h3>\n        <p>Last post was {timeSince(props.roomData.lastTimestamp)}</p>\n      </div>\n\n      <div className=\"chat_headerRight\">\n        <IconButton>\n          <SearchOutlined />\n        </IconButton>\n        <IconButton>\n          <AttachFile />\n        </IconButton>\n        <IconButton>\n          <MoreVert onClick={()=>props.handleToggleThread()}/>\n        </IconButton>\n      </div>\n    </div>\n  )\n}\n\nexport default ChatHeader;\n","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/Message.js",[],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/Participant.js",[],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/map/MapContainer.js",["93","94","95","96","97"],"import React, {useEffect, useState} from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\nconst MapContainer = (props) => {\n\n  const [loaded, setLoaded] = useState(false);\n  const [bound, setBound] = useState();\n  const [obj, setObj] = useState({});\n\n  const bounds = new props.google.maps.LatLngBounds();\n  for (var i = 0; i < props.points.length; i++) {\n    bounds.extend(props.points[i]);\n  }\n\n  useEffect(()=>{\n\n    setBound(bounds)\n    setLoaded(true)\n  },[])\n\n  function wordWrap(str, maxWidth) {\n      let newLineStr = \"*\";\n      let done = false;\n      let res = '';\n      while (str.length > maxWidth) {\n          let found = false;\n          // Inserts new line at first whitespace of the line\n          for (let i = maxWidth - 1; i >= 0; i--) {\n              if (testWhite(str.charAt(i))) {\n                  res = res + [str.slice(0, i), newLineStr].join('');\n                  str = str.slice(i + 1);\n                  found = true;\n                  break;\n              }\n          }\n          // Inserts new line at maxWidth position, the word is too long to wrap\n          if (!found) {\n              res += [str.slice(0, maxWidth), newLineStr].join('');\n              str = str.slice(maxWidth);\n          }\n\n      }\n\n      return res + str;\n  }\n\n  function testWhite(x) {\n      var white = new RegExp(/^\\s$/);\n      return white.test(x.charAt(0));\n  };\n\n  let width;\n  if(props.width === true){\n    width = '58.5%';\n  }else{\n    width = '85.3%';\n  }\n\n  const mapStyles = {\n    width: width,\n    height: '89.5%'\n  };\n\n  const displayMarkers = () => {\n       // console.log(\"Sorted CoOrds:\", Object.values(props.sortedCoOrds));\n       // console.log(\"Sorted CoOrds:\", props.sortedCoOrds);\n      return Object.values(props.sortedCoOrds).map((message, index) => {\n        if(message.room === props.roomName){\n          return <Marker\n                  key={index}\n                  id={index}\n                  position={{\n                    lat: message.latitude,\n                    lng: message.longitude\n                  }}\n                  onClick={() => console.log(\"You clicked me!\")}\n                  title={wordWrap(message.msg,14).split(\"*\")[0]}\n                  icon={{\n                    url: `https://chart.googleapis.com/chart?chst=d_fnote&chld=thought|1|0088FF|h|${wordWrap(message.msg,14).split(\"*\")[0]}|${wordWrap(message.msg,14).split(\"*\")[1] !== undefined ? wordWrap(message.msg,14).split(\"*\")[1] : \"\"}|${wordWrap(message.msg,14).split(\"*\")[2] !== undefined ? wordWrap(message.msg,14).split(\"*\")[2] : \"\"}`,\n                  }}\n                  />\n        }\n      })\n    }\n\n  return(\n    <div>\n    {\n      props.points.length > 0 ? <Map\n              google={props.google}\n\n              style={mapStyles}\n\n              bounds={loaded === true ? bounds : bound}\n            >\n            {loaded === true ? displayMarkers() : null}\n            </Map>\n            :\n            <p>Loading...</p>\n    }\n\n    </div>\n  )\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyAW5MNODxdAncbpnSGtOIl6Gyfjo-e6w3g'\n})(MapContainer);\n\n\n\n\n\n// let msg;\n// msg = props.messages[0].message\n//\n// const wrap = (s) => s.replace(\n//   /(?![^-]{1,32}$)([^-]{1,32})\\s/g, '$1\\n'\n// );\n//\n//  let str = wrap(msg)\n//\n//  let arr = [];\n//\n//  arr = str.split(\"\\n\");\n//\n// console.log(\"The string:\", str, arr);\n","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/sidebar/SkinnySidebar.js",[],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/sidebar/SideBar.js",[],"/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/sidebar/SidebarChat.js",["98"],"import React, {useEffect,useState} from 'react';\nimport {Avatar} from '@material-ui/core';\nimport \"./SidebarChat.css\"\n\nconst SidebarChat = (props) => {\n  const [lastMessage, setLastMessage] = useState(\"\")\n\n  useEffect(()=>{\n      if(props.room.lastMessage.length <= 15){\n        setLastMessage(props.room.lastMessage);\n      }else{\n        setLastMessage(props.room.lastMessage.substring(0,20) + \" ...\");\n      }\n  },[props.room.lastMessage])\n\n  useEffect(()=>{\n    if(props.roomName === props.room.name && props.lastMessage !== \"\"){\n      if(props.lastMessage.length <= 15){\n        setLastMessage(props.lastMessage);\n      }else{\n        setLastMessage(props.lastMessage.substring(0,20) + \"...\");\n      }\n    }\n  },[props.lastMessage])\n\n  const handleClick = () => {\n    props.handleClick(props.room.name);\n    if(props.toggleChatStatus !== true){\n      props.toggleChat();\n    }\n  }\n\n  return(\n    <div className=\"sidebarChat\" onClick={handleClick}>\n      <Avatar />\n      <div className=\"sidebarChat_info\">\n        <h2>{ props.room.name }</h2>\n        <p>{ lastMessage }\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default SidebarChat;\n","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/Home.js",["99","100","101","102","103","104","105","106"],"import React, {useEffect, useState} from 'react';\nimport Pusher from 'pusher-js';\nimport api from './api';\nimport './App.css';\nimport SideBar from './sidebar/SideBar';\nimport SkinnySidebar from './sidebar/SkinnySidebar';\nimport Chat from './chat/Chat';\nimport MapContainer from './map/MapContainer';\n\n// const FAKE_SIDEBAR_ROOMS = [\"SEI40\",\"Hunting\",\"Fishing\",\"Safari\",\"Crime\",\"Company-XYZ-reps\"];\nconst FAKE_USER = \"Swaff-y\";\n\nconst Home = (props) => {\n  const [messages, setMessages] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [toggleChat, setToggleChat] = useState(false);\n  const [toggleSidebar, setToggleSidebar] = useState(true);\n  const [locations, setLocations] = useState([]);\n  const [roomName, setRoomName] = useState(props.match.params.name);\n  const [user, setUser] = useState(props.match.params.user);\n  const [lastMessage, setLastMessage] = useState(\"\");\n  const [points, setPoints] = useState([]);\n  const [sortedCoOrds, setSortedCoOrds] = useState({});\n\n\n  useEffect(() => {\n    //get messages\n    api.get(`/messages/sync/${roomName}`)\n    .then(res => {\n      setMessages(res.data);\n      res.data.forEach((message,index)=>{\n        sortedCoOrds[message.name] = { latitude: message.latitude, longitude: message.longitude, msg: message.message, room: roomName };\n      })\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n  },[]);\n\n  useEffect(() => {\n    //Get rooms\n    api.get(`/rooms/sync/${user}`)\n    .then(res => {\n      setRooms(res.data);\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n\n  },[props.match.params.name]);\n\n\n\n  useEffect(()=>{\n    const pusher = new Pusher('1bf1ac863ab88a3d0532', {\n       cluster: 'ap4'\n     });\n     const channel = pusher.subscribe('messages');\n     channel.bind('inserted', (newMessage) => {\n       setMessages([...messages, newMessage]);\n       setLastMessage(newMessage.message);\n       messages.forEach((message,index)=>{\n         sortedCoOrds[message.name] = { latitude: message.latitude, longitude: message.longitude, msg: message.message, room: roomName };\n       })\n     });\n     return () => {\n       channel.unbind_all();\n       channel.unsubscribe();\n     };\n  },[messages]);\n\n  useEffect(()=>{\n    let rest = [];\n\n    messages.forEach((message,index)=>{\n      rest.push({lat:message.latitude, lng:message.longitude});\n    })\n    // console.log(\"The rest:\", rest);\n    setPoints(rest)\n  },[messages])\n\n  const handleToggleChat = () => {\n    if(toggleChat === false){\n      setToggleChat(true);\n    }else if(toggleChat === true){\n      setToggleChat(false);\n    }\n  }\n\n  const handleToggleSidebar= () => {\n    if(toggleSidebar === false){\n      setToggleSidebar(true);\n    }else if(toggleSidebar === true){\n      setToggleSidebar(false);\n      setToggleChat(false);\n    }\n  }\n\n  const handleRoomChange = (name) => {\n    api.post(`/user/${user}/room/${name}`)\n    .then(res=>{\n      // console.log(\"room change results:\", res.data);\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n\n    api.get(`/messages/sync/${name}`)\n    .then(res => {\n      setMessages(res.data);\n      res.data.forEach((message,index)=>{\n        sortedCoOrds[message.name] = { latitude: message.latitude, longitude: message.longitude, msg: message.message, room: name };\n      })\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n    setRoomName(name);\n    props.history.push(`/room/${name}/${user}`);\n  }\n\n  // console.log(\"The messages:\", messages);\n  return (\n    <div className=\"app\">\n      <div className=\"app_body\">\n        {\n          toggleSidebar === true\n          ?\n          <SideBar toggleChat={handleToggleChat} chatToggleStatus={toggleChat} toggleSidebar={handleToggleSidebar} chatRooms={rooms} handleClick={handleRoomChange}  lastMessage={lastMessage} roomName={roomName} user={user} history={props.history}/> : \n          <SkinnySidebar toggleSidebar={handleToggleSidebar}/>\n        }\n        <div className=\"chat\">\n          {\n            toggleChat === true\n            ?\n            <Chat messages={messages} roomName={roomName} user={user} rooms={rooms} lastMessage={lastMessage}/>\n            :\n            <MapContainer messages={messages} points={points} sortedCoOrds={sortedCoOrds} roomName={roomName}/>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/login/Login.js",["107"],"import React, {useEffect, useState} from 'react';\nimport api from '../api';\nimport './login.css';\n\nconst Login = (props) => {\n  const[users, setUsers] = useState([]);\n  const[toggleDrop, setToggleDrop] = useState(false);\n\n  useEffect(()=>{\n    api.get('/users')\n    .then(res => {\n        // console.log(\"The user data\",res.data);\n      setUsers(res.data);\n    })\n    .catch(err=>{\n      console.warn(err)\n    })\n  },[])\n\n  const handleToggleDrop = () => {\n\n    if( toggleDrop === true ){\n      setToggleDrop(false)\n    }else if(toggleDrop === false){\n      setToggleDrop(true)\n    }\n  }\n\n  return(\n    <>\n      <div className=\"dropdown\">\n        <button onClick={handleToggleDrop} className=\"dropbtn\">Dropdown</button>\n\n          {\n            toggleDrop === true\n            ?\n            <div id=\"myDropdown\" className=\"dropdown-content\">\n              <a href=\"#/room/SEI40/User1\">User1</a>\n              <a href=\"#/room/SEI40/User2\">User2</a>\n              <a href=\"#/room/SEI40/User3\">User3</a>\n              <a href=\"#/room/SEI40/User4\">User4</a>\n              <a href=\"#/room/SEI40/User5\">User5</a>\n              <a href=\"#/room/SEI40/User6\">User6</a>\n              <a href=\"#/room/SEI40/User7\">User7</a>\n              <a href=\"#/room/SEI40/User8\">User8</a>\n              <a href=\"#/room/SEI40/User9\">User9</a>\n              <a href=\"#/room/SEI40/User10\">User10</a>\n              <a href=\"#/room/SEI40/User11\">User11</a>\n            </div>\n            :\n            null\n\n          }\n\n\n      </div>\n    </>\n  )\n}\n\nexport default Login;\n","/Users/kyleswaffield/sei40/projects/mapChat/whatsapp/src/chat/Emoji.js",["108","109"],"import React, {useEffect, useState} from 'react';\nimport Picker from 'emoji-picker-react';\n\nconst Emoji = (props) => {\n\n  const onEmojiClick = (event, emojiObject) => {\n    props.getEmoji(emojiObject);\n    props.handleToggle();\n  };\n\n  return(\n    <div>\n       <Picker onEmojiClick={onEmojiClick} />\n    </div>\n  )\n}\n\nexport default Emoji;\n\n// {chosenEmoji ? (\n//   <span>You chose: {chosenEmoji.emoji}</span>\n// ) : (\n//   <span>No emoji Chosen</span>\n// )}\n",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"110","replacedBy":"114"},{"ruleId":"112","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":4,"column":10,"nodeType":"118","messageId":"119","endLine":4,"endColumn":14},{"ruleId":"120","severity":1,"message":"121","line":22,"column":5,"nodeType":"122","endLine":22,"endColumn":21,"suggestions":"123"},{"ruleId":"116","severity":1,"message":"124","line":1,"column":16,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"125","line":1,"column":27,"nodeType":"118","messageId":"119","endLine":1,"endColumn":35},{"ruleId":"116","severity":1,"message":"126","line":8,"column":10,"nodeType":"118","messageId":"119","endLine":8,"endColumn":13},{"ruleId":"116","severity":1,"message":"127","line":8,"column":15,"nodeType":"118","messageId":"119","endLine":8,"endColumn":21},{"ruleId":"120","severity":1,"message":"128","line":19,"column":5,"nodeType":"122","endLine":19,"endColumn":7,"suggestions":"129"},{"ruleId":"116","severity":1,"message":"130","line":23,"column":11,"nodeType":"118","messageId":"119","endLine":23,"endColumn":15},{"ruleId":"131","severity":1,"message":"132","line":67,"column":69,"nodeType":"133","messageId":"134","endLine":67,"endColumn":71},{"ruleId":"120","severity":1,"message":"135","line":24,"column":5,"nodeType":"122","endLine":24,"endColumn":24,"suggestions":"136"},{"ruleId":"116","severity":1,"message":"137","line":11,"column":7,"nodeType":"118","messageId":"119","endLine":11,"endColumn":16},{"ruleId":"116","severity":1,"message":"138","line":18,"column":10,"nodeType":"118","messageId":"119","endLine":18,"endColumn":19},{"ruleId":"116","severity":1,"message":"139","line":18,"column":21,"nodeType":"118","messageId":"119","endLine":18,"endColumn":33},{"ruleId":"116","severity":1,"message":"140","line":20,"column":16,"nodeType":"118","messageId":"119","endLine":20,"endColumn":23},{"ruleId":"116","severity":1,"message":"141","line":23,"column":24,"nodeType":"118","messageId":"119","endLine":23,"endColumn":39},{"ruleId":"120","severity":1,"message":"142","line":38,"column":5,"nodeType":"122","endLine":38,"endColumn":7,"suggestions":"143"},{"ruleId":"120","severity":1,"message":"144","line":50,"column":5,"nodeType":"122","endLine":50,"endColumn":30,"suggestions":"145"},{"ruleId":"120","severity":1,"message":"142","line":70,"column":5,"nodeType":"122","endLine":70,"endColumn":15,"suggestions":"146"},{"ruleId":"116","severity":1,"message":"147","line":6,"column":9,"nodeType":"118","messageId":"119","endLine":6,"endColumn":14},{"ruleId":"116","severity":1,"message":"124","line":1,"column":16,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"125","line":1,"column":27,"nodeType":"118","messageId":"119","endLine":1,"endColumn":35},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],["148"],["149"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.roomName'. Either include it or remove the dependency array.","ArrayExpression",["150"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'obj' is assigned a value but never used.","'setObj' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'bounds'. Either include it or remove the dependency array.",["151"],"'done' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'props.room.name' and 'props.roomName'. Either include them or remove the dependency array.",["152"],"'FAKE_USER' is assigned a value but never used.","'locations' is assigned a value but never used.","'setLocations' is assigned a value but never used.","'setUser' is assigned a value but never used.","'setSortedCoOrds' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'roomName' and 'sortedCoOrds'. Either include them or remove the dependency array.",["153"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["154"],["155"],"'users' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [props.messages, props.roomName]",{"range":"168","text":"169"},"Update the dependencies array to be: [bounds]",{"range":"170","text":"171"},"Update the dependencies array to be: [props.lastMessage, props.room.name, props.roomName]",{"range":"172","text":"173"},"Update the dependencies array to be: [roomName, sortedCoOrds]",{"range":"174","text":"175"},"Update the dependencies array to be: [props.match.params.name, user]",{"range":"176","text":"177"},"Update the dependencies array to be: [messages, roomName, sortedCoOrds]",{"range":"178","text":"179"},[521,537],"[props.messages, props.roomName]",[489,491],"[bounds]",[717,736],"[props.lastMessage, props.room.name, props.roomName]",[1372,1374],"[roomName, sortedCoOrds]",[1555,1580],"[props.match.params.name, user]",[2171,2181],"[messages, roomName, sortedCoOrds]"]